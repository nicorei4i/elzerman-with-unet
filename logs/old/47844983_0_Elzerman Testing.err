[INFO] Module GCC/9.4.0 loaded.

The following have been reloaded with a version change:
  1) GCCcore/.11.3.0 => GCCcore/.9.4.0     3) zlib/1.2.12 => zlib/1.2.11
  2) binutils/2.38 => binutils/2.36.1

[INFO] Module CUDA/11.8.0 loaded.
[INFO] Module cuDNN/8.6.0.163-CUDA-11.8.0 loaded.
/home/md334167/elzerman-with-unet/denoiser_test.py:86: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(state_dict_path, map_location=device))
Traceback (most recent call last):
  File "/home/md334167/elzerman-with-unet/denoiser_test.py", line 141, in <module>
    decoded_test_data = model(batch_x)
                        ^^^^^^^^^^^^^^
  File "/home/md334167/miniconda3/envs/DL/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/md334167/miniconda3/envs/DL/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/rwthfs/rz/cluster/home/md334167/elzerman-with-unet/model.py", line 89, in forward
    xp1,x1 = self.encoder1(x)
             ^^^^^^^^^^^^^^^^
  File "/home/md334167/miniconda3/envs/DL/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/md334167/miniconda3/envs/DL/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/rwthfs/rz/cluster/home/md334167/elzerman-with-unet/model.py", line 19, in forward
    x = self.conv1(x)
        ^^^^^^^^^^^^^
  File "/home/md334167/miniconda3/envs/DL/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/md334167/miniconda3/envs/DL/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/md334167/miniconda3/envs/DL/lib/python3.11/site-packages/torch/nn/modules/conv.py", line 308, in forward
    return self._conv_forward(input, self.weight, self.bias)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/md334167/miniconda3/envs/DL/lib/python3.11/site-packages/torch/nn/modules/conv.py", line 304, in _conv_forward
    return F.conv1d(input, weight, bias, self.stride,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor
